{"changed":true,"filter":false,"title":"test_view.py","tooltip":"/todo/test_view.py","value":"from django.test import TestCase\nfrom django.shortcuts import get_object_or_404\nfrom .models import Item\n\n\nclass TestViews(TestCase):\n\n    def test_get_home_page(self):\n        page = self.client.get(\"/\")\n        self.assertEqual(page.status_code, 200)\n        self.assertTemplateUsed(page, \"todo_list.html\")\n    \n    def test_get_add_item_page(self):\n        page = self.client.get(\"/add\")\n        self.assertEqual(page.status_code, 200)\n        self.assertTemplateUsed(page, \"item_form.html\")\n    \n    def test_get_edit_item_page(self):\n        item = Item(name=\"Create a Test\")\n        item.save()\n\n        page = self.client.get(\"/edit/{0}\".format(item.id))\n        self.assertEqual(page.status_code, 200)\n        self.assertTemplateUsed(page, \"item_form.html\")\n    \n    def test_get_edit_page_for_item_that_does_not_exist(self):\n        page = self.client.get(\"/edit/1\")\n        self.assertEqual(page.status_code, 404)\n    \n    def test_post_create_an_item(self):\n        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})\n        item = get_object_or_404(Item, pk=1)\n        self.assertEqual(item.done, False)\n    \n    def test_post_edit_an_item(self):\n        item = Item(name=\"Create a Test\")\n        item.save()\n        id = item.id\n        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})\n        item = get_object_or_404(Item, pk=id)\n\n        self.assertEqual(\"A different name\", item.name)\n    \n    def test_toggle_status(self):\n        item = Item(name=\"Create a Test\")\n        item.save()\n        id = item.id\n        response = self.client.post(\"/toggle/{0}\".format(id))\n        item = get_object_or_404(Item, pk=id)\n        self.assertEqual(item.done, True)","undoManager":{"mark":-2,"position":100,"stack":[[{"start":{"row":42,"column":37},"end":{"row":42,"column":38},"action":"insert","lines":["/"],"id":353},{"start":{"row":42,"column":38},"end":{"row":42,"column":39},"action":"insert","lines":["e"]},{"start":{"row":42,"column":39},"end":{"row":42,"column":40},"action":"insert","lines":["d"]},{"start":{"row":42,"column":40},"end":{"row":42,"column":41},"action":"insert","lines":["o"]},{"start":{"row":42,"column":41},"end":{"row":42,"column":42},"action":"insert","lines":["i"]},{"start":{"row":42,"column":42},"end":{"row":42,"column":43},"action":"insert","lines":["t"]}],[{"start":{"row":42,"column":42},"end":{"row":42,"column":43},"action":"remove","lines":["t"],"id":354},{"start":{"row":42,"column":41},"end":{"row":42,"column":42},"action":"remove","lines":["i"]},{"start":{"row":42,"column":40},"end":{"row":42,"column":41},"action":"remove","lines":["o"]}],[{"start":{"row":42,"column":40},"end":{"row":42,"column":41},"action":"insert","lines":["i"],"id":355},{"start":{"row":42,"column":41},"end":{"row":42,"column":42},"action":"insert","lines":["t"]}],[{"start":{"row":42,"column":42},"end":{"row":42,"column":43},"action":"insert","lines":["/"],"id":356},{"start":{"row":42,"column":43},"end":{"row":42,"column":44},"action":"insert","lines":["{"]},{"start":{"row":42,"column":44},"end":{"row":42,"column":45},"action":"insert","lines":["}"]}],[{"start":{"row":42,"column":44},"end":{"row":42,"column":45},"action":"insert","lines":["0"],"id":357}],[{"start":{"row":42,"column":47},"end":{"row":42,"column":48},"action":"insert","lines":[" "],"id":358}],[{"start":{"row":42,"column":47},"end":{"row":42,"column":48},"action":"insert","lines":["."],"id":359},{"start":{"row":42,"column":48},"end":{"row":42,"column":49},"action":"insert","lines":["f"]},{"start":{"row":42,"column":49},"end":{"row":42,"column":50},"action":"insert","lines":["o"]},{"start":{"row":42,"column":50},"end":{"row":42,"column":51},"action":"insert","lines":["r"]},{"start":{"row":42,"column":51},"end":{"row":42,"column":52},"action":"insert","lines":["m"]},{"start":{"row":42,"column":52},"end":{"row":42,"column":53},"action":"insert","lines":["a"]},{"start":{"row":42,"column":53},"end":{"row":42,"column":54},"action":"insert","lines":["t"]}],[{"start":{"row":42,"column":54},"end":{"row":42,"column":56},"action":"insert","lines":["()"],"id":360}],[{"start":{"row":42,"column":55},"end":{"row":42,"column":56},"action":"insert","lines":["i"],"id":361},{"start":{"row":42,"column":56},"end":{"row":42,"column":57},"action":"insert","lines":["d"]}],[{"start":{"row":42,"column":58},"end":{"row":42,"column":59},"action":"insert","lines":[","],"id":362}],[{"start":{"row":42,"column":59},"end":{"row":42,"column":60},"action":"insert","lines":[" "],"id":363},{"start":{"row":42,"column":60},"end":{"row":42,"column":61},"action":"insert","lines":["{"]},{"start":{"row":42,"column":61},"end":{"row":42,"column":62},"action":"insert","lines":["}"]}],[{"start":{"row":42,"column":61},"end":{"row":42,"column":63},"action":"insert","lines":["\"\""],"id":364}],[{"start":{"row":42,"column":62},"end":{"row":42,"column":63},"action":"insert","lines":["n"],"id":365},{"start":{"row":42,"column":63},"end":{"row":42,"column":64},"action":"insert","lines":["a"]},{"start":{"row":42,"column":64},"end":{"row":42,"column":65},"action":"insert","lines":["m"]},{"start":{"row":42,"column":65},"end":{"row":42,"column":66},"action":"insert","lines":["e"]}],[{"start":{"row":42,"column":67},"end":{"row":42,"column":68},"action":"insert","lines":[":"],"id":366}],[{"start":{"row":42,"column":68},"end":{"row":42,"column":70},"action":"insert","lines":["\"\""],"id":367}],[{"start":{"row":42,"column":69},"end":{"row":42,"column":70},"action":"insert","lines":["A"],"id":368}],[{"start":{"row":42,"column":70},"end":{"row":42,"column":71},"action":"insert","lines":[" "],"id":369},{"start":{"row":42,"column":71},"end":{"row":42,"column":72},"action":"insert","lines":["d"]},{"start":{"row":42,"column":72},"end":{"row":42,"column":73},"action":"insert","lines":["i"]},{"start":{"row":42,"column":73},"end":{"row":42,"column":74},"action":"insert","lines":["f"]},{"start":{"row":42,"column":74},"end":{"row":42,"column":75},"action":"insert","lines":["f"]},{"start":{"row":42,"column":75},"end":{"row":42,"column":76},"action":"insert","lines":["e"]},{"start":{"row":42,"column":76},"end":{"row":42,"column":77},"action":"insert","lines":["r"]},{"start":{"row":42,"column":77},"end":{"row":42,"column":78},"action":"insert","lines":["e"]},{"start":{"row":42,"column":78},"end":{"row":42,"column":79},"action":"insert","lines":["t"]}],[{"start":{"row":42,"column":78},"end":{"row":42,"column":79},"action":"remove","lines":["t"],"id":370}],[{"start":{"row":42,"column":78},"end":{"row":42,"column":79},"action":"insert","lines":["n"],"id":371},{"start":{"row":42,"column":79},"end":{"row":42,"column":80},"action":"insert","lines":["t"]}],[{"start":{"row":42,"column":80},"end":{"row":42,"column":81},"action":"insert","lines":[" "],"id":372},{"start":{"row":42,"column":81},"end":{"row":42,"column":82},"action":"insert","lines":["n"]},{"start":{"row":42,"column":82},"end":{"row":42,"column":83},"action":"insert","lines":["a"]},{"start":{"row":42,"column":83},"end":{"row":42,"column":84},"action":"insert","lines":["m"]},{"start":{"row":42,"column":84},"end":{"row":42,"column":85},"action":"insert","lines":["e"]}],[{"start":{"row":42,"column":89},"end":{"row":43,"column":0},"action":"insert","lines":["",""],"id":373},{"start":{"row":43,"column":0},"end":{"row":43,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":43,"column":8},"end":{"row":43,"column":44},"action":"insert","lines":["item = get_object_or_404(Item, pk=1)"],"id":374}],[{"start":{"row":43,"column":42},"end":{"row":43,"column":43},"action":"remove","lines":["1"],"id":375}],[{"start":{"row":43,"column":42},"end":{"row":43,"column":43},"action":"insert","lines":["i"],"id":376},{"start":{"row":43,"column":43},"end":{"row":43,"column":44},"action":"insert","lines":["d"]}],[{"start":{"row":43,"column":45},"end":{"row":44,"column":0},"action":"insert","lines":["",""],"id":377},{"start":{"row":44,"column":0},"end":{"row":44,"column":8},"action":"insert","lines":["        "]},{"start":{"row":44,"column":8},"end":{"row":44,"column":9},"action":"insert","lines":["s"]},{"start":{"row":44,"column":9},"end":{"row":44,"column":10},"action":"insert","lines":["e"]},{"start":{"row":44,"column":10},"end":{"row":44,"column":11},"action":"insert","lines":["l"]},{"start":{"row":44,"column":11},"end":{"row":44,"column":12},"action":"insert","lines":["f"]},{"start":{"row":44,"column":12},"end":{"row":44,"column":13},"action":"insert","lines":["."]},{"start":{"row":44,"column":13},"end":{"row":44,"column":14},"action":"insert","lines":["a"]},{"start":{"row":44,"column":14},"end":{"row":44,"column":15},"action":"insert","lines":["s"]},{"start":{"row":44,"column":15},"end":{"row":44,"column":16},"action":"insert","lines":["s"]},{"start":{"row":44,"column":16},"end":{"row":44,"column":17},"action":"insert","lines":["e"]},{"start":{"row":44,"column":17},"end":{"row":44,"column":18},"action":"insert","lines":["r"]}],[{"start":{"row":44,"column":13},"end":{"row":44,"column":18},"action":"remove","lines":["asser"],"id":378},{"start":{"row":44,"column":13},"end":{"row":44,"column":26},"action":"insert","lines":["assertEqual()"]}],[{"start":{"row":44,"column":25},"end":{"row":44,"column":27},"action":"insert","lines":["\"\""],"id":379}],[{"start":{"row":44,"column":26},"end":{"row":44,"column":27},"action":"insert","lines":["A"],"id":380}],[{"start":{"row":44,"column":27},"end":{"row":44,"column":28},"action":"insert","lines":[" "],"id":381},{"start":{"row":44,"column":28},"end":{"row":44,"column":29},"action":"insert","lines":["d"]},{"start":{"row":44,"column":29},"end":{"row":44,"column":30},"action":"insert","lines":["i"]},{"start":{"row":44,"column":30},"end":{"row":44,"column":31},"action":"insert","lines":["f"]},{"start":{"row":44,"column":31},"end":{"row":44,"column":32},"action":"insert","lines":["f"]},{"start":{"row":44,"column":32},"end":{"row":44,"column":33},"action":"insert","lines":["e"]},{"start":{"row":44,"column":33},"end":{"row":44,"column":34},"action":"insert","lines":["r"]},{"start":{"row":44,"column":34},"end":{"row":44,"column":35},"action":"insert","lines":["n"]}],[{"start":{"row":44,"column":34},"end":{"row":44,"column":35},"action":"remove","lines":["n"],"id":382}],[{"start":{"row":44,"column":34},"end":{"row":44,"column":35},"action":"insert","lines":["e"],"id":383},{"start":{"row":44,"column":35},"end":{"row":44,"column":36},"action":"insert","lines":["n"]},{"start":{"row":44,"column":36},"end":{"row":44,"column":37},"action":"insert","lines":["t"]}],[{"start":{"row":44,"column":37},"end":{"row":44,"column":38},"action":"insert","lines":[" "],"id":384},{"start":{"row":44,"column":38},"end":{"row":44,"column":39},"action":"insert","lines":["N"]},{"start":{"row":44,"column":39},"end":{"row":44,"column":40},"action":"insert","lines":["a"]},{"start":{"row":44,"column":40},"end":{"row":44,"column":41},"action":"insert","lines":["m"]},{"start":{"row":44,"column":41},"end":{"row":44,"column":42},"action":"insert","lines":["e"]}],[{"start":{"row":44,"column":43},"end":{"row":44,"column":44},"action":"insert","lines":[","],"id":385}],[{"start":{"row":44,"column":44},"end":{"row":44,"column":45},"action":"insert","lines":[" "],"id":386},{"start":{"row":44,"column":45},"end":{"row":44,"column":46},"action":"insert","lines":["i"]},{"start":{"row":44,"column":46},"end":{"row":44,"column":47},"action":"insert","lines":["t"]},{"start":{"row":44,"column":47},"end":{"row":44,"column":48},"action":"insert","lines":["e"]},{"start":{"row":44,"column":48},"end":{"row":44,"column":49},"action":"insert","lines":["m"]},{"start":{"row":44,"column":49},"end":{"row":44,"column":50},"action":"insert","lines":[","]}],[{"start":{"row":44,"column":49},"end":{"row":44,"column":50},"action":"remove","lines":[","],"id":387}],[{"start":{"row":44,"column":49},"end":{"row":44,"column":50},"action":"insert","lines":["."],"id":388},{"start":{"row":44,"column":50},"end":{"row":44,"column":51},"action":"insert","lines":["n"]},{"start":{"row":44,"column":51},"end":{"row":44,"column":52},"action":"insert","lines":["a"]},{"start":{"row":44,"column":52},"end":{"row":44,"column":53},"action":"insert","lines":["m"]},{"start":{"row":44,"column":53},"end":{"row":44,"column":54},"action":"insert","lines":["e"]}],[{"start":{"row":44,"column":38},"end":{"row":44,"column":39},"action":"remove","lines":["N"],"id":389}],[{"start":{"row":44,"column":38},"end":{"row":44,"column":39},"action":"insert","lines":["n"],"id":390}],[{"start":{"row":44,"column":55},"end":{"row":45,"column":0},"action":"insert","lines":["",""],"id":395},{"start":{"row":45,"column":0},"end":{"row":45,"column":8},"action":"insert","lines":["        "]},{"start":{"row":45,"column":8},"end":{"row":46,"column":0},"action":"insert","lines":["",""]},{"start":{"row":46,"column":0},"end":{"row":46,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":46,"column":4},"end":{"row":46,"column":8},"action":"remove","lines":["    "],"id":396}],[{"start":{"row":46,"column":0},"end":{"row":50,"column":8},"action":"insert","lines":["    def test_post_edit_an_item(self):","        item - Item(name= \"Create a Test\")","        item.save()","        id = item.id","        "],"id":398}],[{"start":{"row":46,"column":13},"end":{"row":46,"column":30},"action":"remove","lines":["post_edit_an_item"],"id":399},{"start":{"row":46,"column":13},"end":{"row":46,"column":14},"action":"insert","lines":["t"]},{"start":{"row":46,"column":14},"end":{"row":46,"column":15},"action":"insert","lines":["o"]},{"start":{"row":46,"column":15},"end":{"row":46,"column":16},"action":"insert","lines":["g"]},{"start":{"row":46,"column":16},"end":{"row":46,"column":17},"action":"insert","lines":["g"]},{"start":{"row":46,"column":17},"end":{"row":46,"column":18},"action":"insert","lines":["l"]},{"start":{"row":46,"column":18},"end":{"row":46,"column":19},"action":"insert","lines":["e"]},{"start":{"row":46,"column":19},"end":{"row":46,"column":20},"action":"insert","lines":["+"]}],[{"start":{"row":46,"column":19},"end":{"row":46,"column":20},"action":"remove","lines":["+"],"id":400}],[{"start":{"row":46,"column":19},"end":{"row":46,"column":20},"action":"insert","lines":["_"],"id":401},{"start":{"row":46,"column":20},"end":{"row":46,"column":21},"action":"insert","lines":["S"]},{"start":{"row":46,"column":21},"end":{"row":46,"column":22},"action":"insert","lines":["t"]},{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"insert","lines":["a"]},{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"insert","lines":["t"]},{"start":{"row":46,"column":24},"end":{"row":46,"column":25},"action":"insert","lines":["u"]},{"start":{"row":46,"column":25},"end":{"row":46,"column":26},"action":"insert","lines":["s"]}],[{"start":{"row":46,"column":25},"end":{"row":46,"column":26},"action":"remove","lines":["s"],"id":402},{"start":{"row":46,"column":24},"end":{"row":46,"column":25},"action":"remove","lines":["u"]},{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"remove","lines":["t"]},{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"remove","lines":["a"]},{"start":{"row":46,"column":21},"end":{"row":46,"column":22},"action":"remove","lines":["t"]}],[{"start":{"row":46,"column":21},"end":{"row":46,"column":22},"action":"insert","lines":["s"],"id":403}],[{"start":{"row":46,"column":21},"end":{"row":46,"column":22},"action":"remove","lines":["s"],"id":404},{"start":{"row":46,"column":20},"end":{"row":46,"column":21},"action":"remove","lines":["S"]}],[{"start":{"row":46,"column":20},"end":{"row":46,"column":21},"action":"insert","lines":["s"],"id":405},{"start":{"row":46,"column":21},"end":{"row":46,"column":22},"action":"insert","lines":["t"]},{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"insert","lines":["u"]},{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"insert","lines":["a"]}],[{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"remove","lines":["a"],"id":406},{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"remove","lines":["u"]}],[{"start":{"row":46,"column":22},"end":{"row":46,"column":23},"action":"insert","lines":["a"],"id":407},{"start":{"row":46,"column":23},"end":{"row":46,"column":24},"action":"insert","lines":["t"]},{"start":{"row":46,"column":24},"end":{"row":46,"column":25},"action":"insert","lines":["u"]},{"start":{"row":46,"column":25},"end":{"row":46,"column":26},"action":"insert","lines":["s"]}],[{"start":{"row":50,"column":12},"end":{"row":51,"column":0},"action":"insert","lines":["",""],"id":408},{"start":{"row":51,"column":0},"end":{"row":51,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":51,"column":8},"end":{"row":51,"column":12},"action":"remove","lines":["    "],"id":409}],[{"start":{"row":51,"column":8},"end":{"row":51,"column":9},"action":"insert","lines":["r"],"id":410},{"start":{"row":51,"column":9},"end":{"row":51,"column":10},"action":"insert","lines":["e"]},{"start":{"row":51,"column":10},"end":{"row":51,"column":11},"action":"insert","lines":["p"]}],[{"start":{"row":51,"column":10},"end":{"row":51,"column":11},"action":"remove","lines":["p"],"id":411}],[{"start":{"row":51,"column":10},"end":{"row":51,"column":11},"action":"insert","lines":["s"],"id":412},{"start":{"row":51,"column":11},"end":{"row":51,"column":12},"action":"insert","lines":["p"]},{"start":{"row":51,"column":12},"end":{"row":51,"column":13},"action":"insert","lines":["o"]}],[{"start":{"row":51,"column":8},"end":{"row":51,"column":13},"action":"remove","lines":["respo"],"id":413},{"start":{"row":51,"column":8},"end":{"row":51,"column":16},"action":"insert","lines":["response"]}],[{"start":{"row":51,"column":16},"end":{"row":51,"column":17},"action":"insert","lines":[" "],"id":414},{"start":{"row":51,"column":17},"end":{"row":51,"column":18},"action":"insert","lines":["="]}],[{"start":{"row":51,"column":18},"end":{"row":51,"column":19},"action":"insert","lines":[" "],"id":415},{"start":{"row":51,"column":19},"end":{"row":51,"column":20},"action":"insert","lines":["="]},{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"insert","lines":["s"]},{"start":{"row":51,"column":21},"end":{"row":51,"column":22},"action":"insert","lines":["e"]},{"start":{"row":51,"column":22},"end":{"row":51,"column":23},"action":"insert","lines":["l"]},{"start":{"row":51,"column":23},"end":{"row":51,"column":24},"action":"insert","lines":["c"]}],[{"start":{"row":51,"column":23},"end":{"row":51,"column":24},"action":"remove","lines":["c"],"id":416},{"start":{"row":51,"column":22},"end":{"row":51,"column":23},"action":"remove","lines":["l"]},{"start":{"row":51,"column":21},"end":{"row":51,"column":22},"action":"remove","lines":["e"]},{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"remove","lines":["s"]}],[{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"insert","lines":["e"],"id":417}],[{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"remove","lines":["e"],"id":418},{"start":{"row":51,"column":19},"end":{"row":51,"column":20},"action":"remove","lines":["="]}],[{"start":{"row":51,"column":19},"end":{"row":51,"column":20},"action":"insert","lines":["s"],"id":419},{"start":{"row":51,"column":20},"end":{"row":51,"column":21},"action":"insert","lines":["e"]},{"start":{"row":51,"column":21},"end":{"row":51,"column":22},"action":"insert","lines":["l"]},{"start":{"row":51,"column":22},"end":{"row":51,"column":23},"action":"insert","lines":["f"]},{"start":{"row":51,"column":23},"end":{"row":51,"column":24},"action":"insert","lines":["."]},{"start":{"row":51,"column":24},"end":{"row":51,"column":25},"action":"insert","lines":["c"]}],[{"start":{"row":51,"column":25},"end":{"row":51,"column":26},"action":"insert","lines":["l"],"id":420},{"start":{"row":51,"column":26},"end":{"row":51,"column":27},"action":"insert","lines":["i"]},{"start":{"row":51,"column":27},"end":{"row":51,"column":28},"action":"insert","lines":["e"]},{"start":{"row":51,"column":28},"end":{"row":51,"column":29},"action":"insert","lines":["n"]},{"start":{"row":51,"column":29},"end":{"row":51,"column":30},"action":"insert","lines":["t"]},{"start":{"row":51,"column":30},"end":{"row":51,"column":31},"action":"insert","lines":[","]}],[{"start":{"row":51,"column":30},"end":{"row":51,"column":31},"action":"remove","lines":[","],"id":421}],[{"start":{"row":51,"column":30},"end":{"row":51,"column":31},"action":"insert","lines":["."],"id":422},{"start":{"row":51,"column":31},"end":{"row":51,"column":32},"action":"insert","lines":["p"]},{"start":{"row":51,"column":32},"end":{"row":51,"column":33},"action":"insert","lines":["o"]},{"start":{"row":51,"column":33},"end":{"row":51,"column":34},"action":"insert","lines":["s"]},{"start":{"row":51,"column":34},"end":{"row":51,"column":35},"action":"insert","lines":["t"]},{"start":{"row":51,"column":35},"end":{"row":51,"column":36},"action":"insert","lines":[")"]}],[{"start":{"row":51,"column":35},"end":{"row":51,"column":36},"action":"remove","lines":[")"],"id":423}],[{"start":{"row":51,"column":35},"end":{"row":51,"column":37},"action":"insert","lines":["()"],"id":424}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"insert","lines":["_"],"id":425}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"remove","lines":["_"],"id":426}],[{"start":{"row":51,"column":36},"end":{"row":51,"column":38},"action":"insert","lines":["\"\""],"id":427}],[{"start":{"row":51,"column":37},"end":{"row":51,"column":38},"action":"insert","lines":["/"],"id":428},{"start":{"row":51,"column":38},"end":{"row":51,"column":39},"action":"insert","lines":["t"]},{"start":{"row":51,"column":39},"end":{"row":51,"column":40},"action":"insert","lines":["o"]},{"start":{"row":51,"column":40},"end":{"row":51,"column":41},"action":"insert","lines":["g"]},{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"insert","lines":["l"]}],[{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"remove","lines":["l"],"id":429}],[{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"insert","lines":["g"],"id":430},{"start":{"row":51,"column":42},"end":{"row":51,"column":43},"action":"insert","lines":["l"]},{"start":{"row":51,"column":43},"end":{"row":51,"column":44},"action":"insert","lines":["e"]},{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"insert","lines":["/"]}],[{"start":{"row":51,"column":45},"end":{"row":51,"column":46},"action":"insert","lines":["{"],"id":431},{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"insert","lines":["}"]}],[{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"insert","lines":["0"],"id":432}],[{"start":{"row":51,"column":49},"end":{"row":51,"column":50},"action":"insert","lines":["."],"id":433},{"start":{"row":51,"column":50},"end":{"row":51,"column":51},"action":"insert","lines":["f"]},{"start":{"row":51,"column":51},"end":{"row":51,"column":52},"action":"insert","lines":["o"]},{"start":{"row":51,"column":52},"end":{"row":51,"column":53},"action":"insert","lines":["r"]},{"start":{"row":51,"column":53},"end":{"row":51,"column":54},"action":"insert","lines":["m"]},{"start":{"row":51,"column":54},"end":{"row":51,"column":55},"action":"insert","lines":["a"]},{"start":{"row":51,"column":55},"end":{"row":51,"column":56},"action":"insert","lines":["t"]},{"start":{"row":51,"column":56},"end":{"row":51,"column":57},"action":"insert","lines":["."]}],[{"start":{"row":51,"column":56},"end":{"row":51,"column":57},"action":"remove","lines":["."],"id":434}],[{"start":{"row":51,"column":56},"end":{"row":51,"column":58},"action":"insert","lines":["()"],"id":435}],[{"start":{"row":51,"column":57},"end":{"row":51,"column":58},"action":"insert","lines":["i"],"id":436},{"start":{"row":51,"column":58},"end":{"row":51,"column":59},"action":"insert","lines":["d"]}],[{"start":{"row":51,"column":61},"end":{"row":52,"column":0},"action":"insert","lines":["",""],"id":437},{"start":{"row":52,"column":0},"end":{"row":52,"column":8},"action":"insert","lines":["        "]},{"start":{"row":52,"column":8},"end":{"row":53,"column":0},"action":"insert","lines":["",""]},{"start":{"row":53,"column":0},"end":{"row":53,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":53,"column":8},"end":{"row":54,"column":42},"action":"insert","lines":[" item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)"],"id":438}],[{"start":{"row":47,"column":13},"end":{"row":47,"column":14},"action":"remove","lines":["-"],"id":439}],[{"start":{"row":47,"column":13},"end":{"row":47,"column":14},"action":"insert","lines":["="],"id":440}],[{"start":{"row":54,"column":40},"end":{"row":54,"column":41},"action":"remove","lines":["e"],"id":441},{"start":{"row":54,"column":39},"end":{"row":54,"column":40},"action":"remove","lines":["s"]},{"start":{"row":54,"column":38},"end":{"row":54,"column":39},"action":"remove","lines":["l"]},{"start":{"row":54,"column":37},"end":{"row":54,"column":38},"action":"remove","lines":["a"]},{"start":{"row":54,"column":36},"end":{"row":54,"column":37},"action":"remove","lines":["F"]}],[{"start":{"row":54,"column":36},"end":{"row":54,"column":37},"action":"insert","lines":["T"],"id":442},{"start":{"row":54,"column":37},"end":{"row":54,"column":38},"action":"insert","lines":["r"]},{"start":{"row":54,"column":38},"end":{"row":54,"column":39},"action":"insert","lines":["u"]},{"start":{"row":54,"column":39},"end":{"row":54,"column":40},"action":"insert","lines":["e"]},{"start":{"row":54,"column":40},"end":{"row":54,"column":41},"action":"insert","lines":["w"]}],[{"start":{"row":54,"column":40},"end":{"row":54,"column":41},"action":"remove","lines":["w"],"id":443}],[{"start":{"row":53,"column":8},"end":{"row":53,"column":9},"action":"remove","lines":[" "],"id":444}],[{"start":{"row":38,"column":13},"end":{"row":38,"column":14},"action":"remove","lines":["-"],"id":445}],[{"start":{"row":38,"column":13},"end":{"row":38,"column":14},"action":"insert","lines":["="],"id":446}],[{"start":{"row":42,"column":6},"end":{"row":42,"column":7},"action":"remove","lines":[" "],"id":447},{"start":{"row":42,"column":5},"end":{"row":42,"column":6},"action":"remove","lines":[" "]},{"start":{"row":42,"column":4},"end":{"row":42,"column":5},"action":"remove","lines":[" "]},{"start":{"row":42,"column":0},"end":{"row":42,"column":4},"action":"remove","lines":["    "]},{"start":{"row":41,"column":8},"end":{"row":42,"column":0},"action":"remove","lines":["",""]},{"start":{"row":41,"column":4},"end":{"row":41,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":41,"column":4},"end":{"row":41,"column":5},"action":"remove","lines":[" "],"id":448}],[{"start":{"row":41,"column":4},"end":{"row":41,"column":8},"action":"insert","lines":["    "],"id":449}],[{"start":{"row":0,"column":0},"end":{"row":53,"column":41},"action":"remove","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertAlmostEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","        ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertAlmostEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","        ","        ","    def test_get_edit_item_page(self):","        item = Item(name='Create a Test')","        item.save()","        ","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertAlmostEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","        ","        ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","        ","        ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","        ","        ","    def test_post_edit_an_item(self):","        item = Item(name= \"Create a Test\")","        item.save()","        id = item.id","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\":\"A different name\"} )","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(\"A different name\", item.name)","        ","    def test_toggle_status(self):","        item = Item(name= \"Create a Test\")","        item.save()","        id = item.id","            ","        response = self.client.post(\"/toggle/{0}\".format(id))","        ","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, True)"],"id":450},{"start":{"row":0,"column":0},"end":{"row":52,"column":41},"action":"insert","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","    ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","    ","    def test_post_edit_an_item(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})","        item = get_object_or_404(Item, pk=id)","","        self.assertEqual(\"A different name\", item.name)","    ","    def test_toggle_status(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/toggle/{0}\".format(id))","","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(item.done, True)"]}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":41},"action":"remove","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","    ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","    ","    def test_post_edit_an_item(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})","        item = get_object_or_404(Item, pk=id)","","        self.assertEqual(\"A different name\", item.name)","    ","    def test_toggle_status(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/toggle/{0}\".format(id))","","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(item.done, True)"],"id":451},{"start":{"row":0,"column":0},"end":{"row":52,"column":41},"action":"insert","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","    ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","    ","    def test_post_edit_an_item(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})","        item = get_object_or_404(Item, pk=id)","","        self.assertEqual(\"A different name\", item.name)","    ","    def test_toggle_status(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/toggle/{0}\".format(id))","","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(item.done, True)"]}],[{"start":{"row":0,"column":0},"end":{"row":52,"column":41},"action":"remove","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","    ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","    ","    def test_post_edit_an_item(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})","        item = get_object_or_404(Item, pk=id)","","        self.assertEqual(\"A different name\", item.name)","    ","    def test_toggle_status(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/toggle/{0}\".format(id))","","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(item.done, True)"],"id":452},{"start":{"row":0,"column":0},"end":{"row":52,"column":41},"action":"insert","lines":["from django.test import TestCase","from django.shortcuts import get_object_or_404","from .models import Item","","","class TestViews(TestCase):","","    def test_get_home_page(self):","        page = self.client.get(\"/\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"todo_list.html\")","    ","    def test_get_add_item_page(self):","        page = self.client.get(\"/add\")","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_item_page(self):","        item = Item(name=\"Create a Test\")","        item.save()","","        page = self.client.get(\"/edit/{0}\".format(item.id))","        self.assertEqual(page.status_code, 200)","        self.assertTemplateUsed(page, \"item_form.html\")","    ","    def test_get_edit_page_for_item_that_does_not_exist(self):","        page = self.client.get(\"/edit/1\")","        self.assertEqual(page.status_code, 404)","    ","    def test_post_create_an_item(self):","        response = self.client.post(\"/add\", {\"name\": \"Create a Test\"})","        item = get_object_or_404(Item, pk=1)","        self.assertEqual(item.done, False)","    ","    def test_post_edit_an_item(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/edit/{0}\".format(id), {\"name\": \"A different name\"})","        item = get_object_or_404(Item, pk=id)","","        self.assertEqual(\"A different name\", item.name)","    ","    def test_toggle_status(self):","        item = Item(name=\"Create a Test\")","        item.save()","        id = item.id","","        response = self.client.post(\"/toggle/{0}\".format(id))","","        item = get_object_or_404(Item, pk=id)","        self.assertEqual(item.done, True)"]}],[{"start":{"row":51,"column":4},"end":{"row":51,"column":8},"action":"remove","lines":["    "],"id":453},{"start":{"row":51,"column":0},"end":{"row":51,"column":4},"action":"remove","lines":["    "]},{"start":{"row":50,"column":0},"end":{"row":51,"column":0},"action":"remove","lines":["",""]},{"start":{"row":49,"column":61},"end":{"row":50,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":49,"column":61},"end":{"row":50,"column":0},"action":"insert","lines":["",""],"id":454},{"start":{"row":50,"column":0},"end":{"row":50,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":49,"column":4},"end":{"row":49,"column":8},"action":"remove","lines":["    "],"id":455},{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"remove","lines":["    "]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"remove","lines":["",""]},{"start":{"row":47,"column":20},"end":{"row":48,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":47,"column":20},"end":{"row":48,"column":0},"action":"insert","lines":["",""],"id":456},{"start":{"row":48,"column":0},"end":{"row":48,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":37,"column":20},"end":{"row":38,"column":0},"action":"remove","lines":["",""],"id":457},{"start":{"row":37,"column":19},"end":{"row":37,"column":20},"action":"remove","lines":["d"]}],[{"start":{"row":37,"column":19},"end":{"row":37,"column":20},"action":"insert","lines":["d"],"id":458}]]},"ace":{"folds":[],"scrolltop":424,"scrollleft":0,"selection":{"start":{"row":17,"column":38},"end":{"row":17,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":20,"state":"start","mode":"ace/mode/python"}},"timestamp":1570026853921}